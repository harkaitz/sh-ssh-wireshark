#!/bin/sh -e
##:
#h: Usage: ssh-h-wireshark [-f FILTER] USER@HOST INTF
#h:
#h: Connect to a remote Linux/OpenBSD machine "USER@HOST" and execute the
#h: "tcpdump" command in "INTF" interface.
#h:
#h: The SSH packets are discarded. Of course the user USER needs capturing
#h: permissions.
#h:
#h: You can specify filtering options (-f) to wireshark with "-f".
#h:
#h: Example: $ ssh-h-wireshark -f 'ip.src != 192.168.1.0/24' root@m1 bse0
##:
ssh_h_wireshark() {
    local OPTIND optopt opt_f= cmd=''
    
    ## Parse command line arguments.
    while getopts "f:" optopt; do
        case $optopt in
            f)  opt_f="${OPTARG}";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test ! -n "$1"; then
        echo >&2 "error: Please specify a SSH host."
        return 1
    fi
    if test ! -n "$2"; then
        echo >&2 "error: Please specify an interface."
        return 1
    fi
    
    ## Check wireshark is installed.
    if ! which wireshark >/dev/null 2>&1; then
        echo >&2 "error: wireshark: Command not found."
        return 1
    fi
    
    ## Calculate program to execute.
    cmd="
        intf='$2'
        "'
        set -e
        if ! which tcpdump >/dev/null 2>&1; then
            echo >&2 "error: Remote host: tcpdump not installed."
            exit 1
        fi
        ip="$(echo "$SSH_CONNECTION" | cut -d " " -f 1)"
        port="$(echo "$SSH_CONNECTION" | cut -d " " -f 2)"
        case "$(uname -s)" in
            OpenBSD) filter="not (src $ip && port $port)" ;;
            *)       filter="(not (ip.src == $ip && tcp.srcport == $port))";;
        esac
        echo >&2 "tcpdump -i $intf -w - \"${filter}\""
        tcpdump -i "$intf" -w - "${filter}"
    '

    ## Execute wireshark.
    ssh "$1" "$cmd" | wireshark -k -i - ${opt_f:+ -f "${opt_f}" }
    
}
if test @"${SCRNAME:-$(basename "$0")}" = @"ssh-h-wireshark"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            ssh_h_wireshark "$@"; exit 0;;
    esac
fi
